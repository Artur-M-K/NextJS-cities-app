{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"L:\\\\PROGRAMOWANIE\\\\NEXT\\\\Udemy\\\\NEXT app\\\\big-project\\\\pages\\\\[cityId]\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\nimport CityDetail from '../../components/cities/CityDetail';\n\nvar CityDetails = function CityDetails(props) {\n  return /*#__PURE__*/_jsxDEV(CityDetail, {\n    image: props.image,\n    title: props.title,\n    country: props.country,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = CityDetails;\nexport var __N_SSG = true;\nexport default CityDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityDetails\");","map":{"version":3,"sources":["L:/PROGRAMOWANIE/NEXT/Udemy/NEXT app/big-project/pages/[cityId]/index.js"],"names":["React","CityDetail","CityDetails","props","image","title","country","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B,sBACI,QAAC,UAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,KADjB;AAEI,IAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHnB;AAII,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJvB;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CATD;;KAAML,W;;AAgDN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport { MongoClient } from 'mongodb';\r\nimport CityDetail from '../../components/cities/CityDetail';\r\n\r\nconst CityDetails = (props) => {\r\n    return (\r\n        <CityDetail\r\n            image={props.image}\r\n            title={props.title}\r\n            country={props.country}\r\n            description={props.description}\r\n        />\r\n    )\r\n}\r\n\r\nexport const getStaticPaths = async() => {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\r\n   const db = client.db();\r\n\r\n   const citiesCollection = db.collection('cities');\r\n\r\n   const cities = await citiesCollection.find({}, {_id: 1}).toArray();\r\n\r\n   client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: cities.map(city => ({params: {cityId: city._id.toString()}})),\r\n    }\r\n}\r\n\r\nexport const getStaticProps = async(context) => {\r\n\r\n    const cityId = context.params.cityId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\r\n   const db = client.db();\r\n\r\n   const citiesCollection = db.collection('cities');\r\n\r\n   const selectedCity = await citiesCollection.findOne({_id: cityId});\r\n\r\n   client.close();\r\n\r\n    return {\r\n        props: {\r\n            cityData: selectedCity,\r\n        }\r\n    }\r\n}\r\n\r\nexport default CityDetails;"]},"metadata":{},"sourceType":"module"}