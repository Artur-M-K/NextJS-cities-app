{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"L:\\\\PROGRAMOWANIE\\\\NEXT\\\\Udemy\\\\NEXT app\\\\big-project\\\\pages\\\\[cityId]\\\\index.js\";\nimport React from 'react';\nimport { MongoClient } from 'mongodb';\nimport CityDetail from '../../components/cities/CityDetail';\n\nconst CityDetails = () => {\n  return /*#__PURE__*/_jsxDEV(CityDetail, {\n    image: \"https://cdn.pixabay.com/photo/2015/11/01/19/45/warsaw-1017468_1280.jpg\",\n    title: \"Warsaw\",\n    country: \"Poland\",\n    description: \"description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\n  const db = client.db();\n  const citiesCollection = db.collection('cities');\n  const cities = await citiesCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: cities.map(city => ({\n      params: {\n        cityId: city._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const cityId = context.params.cityId;\n  const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\n  const db = client.db();\n  const citiesCollection = db.collection('cities');\n  const selectedCity = await citiesCollection.findOne({\n    _id: cityId\n  });\n  client.close();\n  return {\n    props: {\n      cityData: selectedCity\n    }\n  };\n};\nexport default CityDetails;","map":{"version":3,"sources":["L:/PROGRAMOWANIE/NEXT/Udemy/NEXT app/big-project/pages/[cityId]/index.js"],"names":["React","MongoClient","CityDetail","CityDetails","getStaticPaths","client","connect","db","citiesCollection","collection","cities","find","_id","toArray","close","fallback","paths","map","city","params","cityId","toString","getStaticProps","context","selectedCity","findOne","props","cityData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,sBACI,QAAC,UAAD;AACI,IAAA,KAAK,EAAC,wEADV;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,OAAO,EAAC,QAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAW;AAErC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,4FAApB,CAArB;AACD,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AAEA,QAAMC,MAAM,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,EAAoCC,OAApC,EAArB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEC,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAWC,IAAI,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,MAAM,EAAEF,IAAI,CAACN,GAAL,CAASS,QAAT;AAAT;AAAT,KAAL,CAAf;AAFJ,GAAP;AAIH,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAkB;AAE5C,QAAMH,MAAM,GAAGG,OAAO,CAACJ,MAAR,CAAeC,MAA9B;AAEA,QAAMf,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,4FAApB,CAArB;AACD,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AAEA,QAAMe,YAAY,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAAzB,CAA3B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEC,SAAO;AACHY,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAEH;AADP;AADJ,GAAP;AAKH,CAlBM;AAoBP,eAAerB,WAAf","sourcesContent":["import React from 'react';\r\nimport { MongoClient } from 'mongodb';\r\nimport CityDetail from '../../components/cities/CityDetail';\r\n\r\nconst CityDetails = () => {\r\n    return (\r\n        <CityDetail\r\n            image='https://cdn.pixabay.com/photo/2015/11/01/19/45/warsaw-1017468_1280.jpg'\r\n            title='Warsaw'\r\n            country='Poland'\r\n            description='description'\r\n        />\r\n    )\r\n}\r\n\r\nexport const getStaticPaths = async() => {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\r\n   const db = client.db();\r\n\r\n   const citiesCollection = db.collection('cities');\r\n\r\n   const cities = await citiesCollection.find({}, {_id: 1}).toArray();\r\n\r\n   client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: cities.map(city => ({params: {cityId: city._id.toString()}})),\r\n    }\r\n}\r\n\r\nexport const getStaticProps = async(context) => {\r\n\r\n    const cityId = context.params.cityId;\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\r\n   const db = client.db();\r\n\r\n   const citiesCollection = db.collection('cities');\r\n\r\n   const selectedCity = await citiesCollection.findOne({_id: cityId});\r\n\r\n   client.close();\r\n\r\n    return {\r\n        props: {\r\n            cityData: selectedCity,\r\n        }\r\n    }\r\n}\r\n\r\nexport default CityDetails;"]},"metadata":{},"sourceType":"module"}