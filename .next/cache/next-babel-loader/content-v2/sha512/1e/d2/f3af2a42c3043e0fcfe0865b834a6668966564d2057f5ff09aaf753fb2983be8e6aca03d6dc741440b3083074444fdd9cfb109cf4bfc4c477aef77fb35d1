{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"L:\\\\PROGRAMOWANIE\\\\NEXT\\\\Udemy\\\\NEXT app\\\\big-project\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport CityList from '../components/cities/CityList';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Capitals around the World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Capitals around the World. Browse a huge list of capitals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(CityList, {\n      cities: props.cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticProps = async () => {\n  //fetch data from an api or database\n  const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\n  const db = client.db();\n  const citiesCollection = db.collection('cities');\n  const cities = await citiesCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      cities: cities.map(city => ({\n        title: city.title,\n        country: city.country,\n        image: city.image,\n        id: city._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["L:/PROGRAMOWANIE/NEXT/Udemy/NEXT app/big-project/pages/index.js"],"names":["Head","MongoClient","CityList","HomePage","props","cities","getStaticProps","client","connect","db","citiesCollection","collection","find","toArray","close","map","city","title","country","image","id","_id","toString","revalidate"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAEzB,sBACC;AAAA,4BACG,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAKI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEA,KAAK,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADD;AASF,CAXD;;AAcA,OAAO,MAAMC,cAAc,GAAI,YAAW;AACtC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,4FAApB,CAArB;AACD,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AAEA,QAAMN,MAAM,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAArB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEC,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAEA,MAAM,CAACU,GAAP,CAAWC,IAAI,KAAK;AACxBC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADY;AAExBC,QAAAA,OAAO,EAAEF,IAAI,CAACE,OAFU;AAGxBC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAHY;AAIxBC,QAAAA,EAAE,EAAEJ,IAAI,CAACK,GAAL,CAASC,QAAT;AAJoB,OAAL,CAAf;AADL,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH,CArBM;AAuBP,eAAepB,QAAf","sourcesContent":["import Head from 'next/head';\r\nimport { MongoClient } from 'mongodb';\r\nimport CityList from '../components/cities/CityList';\r\n\r\n\r\nconst HomePage = (props) => {\r\n\r\n   return  (\r\n    <>\r\n       <Head>\r\n           <title>Capitals around the World</title>\r\n           <meta name=\"description\" content=\"Capitals around the World. Browse a huge list of capitals\" />\r\n       </Head>\r\n        <CityList cities={props.cities} />\r\n    </>\r\n   )\r\n}\r\n\r\n\r\nexport const getStaticProps =  async() => {\r\n    //fetch data from an api or database\r\n    const client = await MongoClient.connect('mongodb+srv://artur:leeloo83@cluster0.mm3bc.mongodb.net/cities?retryWrites=true&w=majority');\r\n   const db = client.db();\r\n\r\n   const citiesCollection = db.collection('cities');\r\n\r\n   const cities = await citiesCollection.find().toArray();\r\n   client.close(); \r\n\r\n    return {\r\n        props: {\r\n            cities: cities.map(city => ({\r\n                title: city.title,\r\n                country: city.country,\r\n                image: city.image,\r\n                id: city._id.toString()\r\n            }))\r\n        },\r\n        revalidate: 1\r\n    };\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}